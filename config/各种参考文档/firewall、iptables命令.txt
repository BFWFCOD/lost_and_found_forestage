firewalld、iptables：
CentOS7在防火墙与端口上的操作：
CentOS7使用systemctl指令来管理系统的单一服务，在CentOS7中对于firewalld（防火墙）服务的开启、关闭、状态查询也同样是使用该指令，操作如下：

启动防火墙： systemctl start firewalld
关闭防火墙： systemctl stop firewalld
查看状态： systemctl status firewalld 
开机启用防火墙：systemctl enable firewalld
开机禁用防火墙：systemctl disable firewalld
防火墙是否开机启动：systemctl is-enabled firewalld
已经启动的服务列表：systemctl list-unit-files|grep enabled
启动失败的服务列表：systemctl --failed

在安装软件或列库时，除了直接开启和关闭防火墙，也可通过对端口的操作直接开放连接：
添加端口：firewall-cmd --zone=public --add-port=80/tcp --permanent
查看端口状态：firewall-cmd --zone=public --query-port=80/tcp
删除开放的端口：firewall-cmd --zone=public --remove-port=80/tcp --permanent
更新防火墙规则：firewall-cmd --reload

每次更新防火墙规则，都需要重新更新：firewall-cmd --reload
更新完防火墙的设置后，可查看所有开启的端口：firewall-cmd --zone=public --list-ports

开放或限制端口
#单个端口开放
firewall-cmd --zone=public --add-port=80/tcp --permanent
#每次修改都要重新载入
firewall-cmd --reload
#移除开放的端口则端口会被限制
firewall-cmd --zone=public --remove-port=80/tcp --permanent
firewall-cmd --reload

#批量开放端口
firewall-cmd --zone=public --add-port=2000-2100/tcp --permanent
firewall-cmd --reload
#批量限制
firewall-cmd --zone=public --remove-port=2000-2100/tcp --permanent
firewall-cmd --reload

查看开放的端口
#查看所有开放成功的端口
firewall-cmd --zone=public --list-ports
#查看端口是否开放成功
firewall-cmd --zone=public --query-port=80/tcp

开放或者限制IP访问
#允许指定IP访问80端口，如果要限制 accept改为reject
firewall-cmd --permanent --add-rich-rule="rule family="ipv4" source address="192.168.1.100" port protocol="tcp" port="80" accept"

firewall-cmd --reload

#允许内网访问80端口，如果要限制 accept改为reject
firewall-cmd --permanent --add-rich-rule="rule family="ipv4" source address="192.168.1.0/24" port protocol="tcp" port="80" accept"

firewall-cmd --reload

#查看已经添加的规则
firewall-cmd --zone=public --list-rich-rules
#删除修改已经添加的规则
vi /etc/firewalld/zones/public.xml
firewall-cmd --reload

firewall启用禁用
#开启
systemctl start  firewalld
#查看状态
systemctl status firewalld
#开机启动
systemctl enable firewalld
#禁用
systemctl disable firewalld
#停用
systemctl stop firewalld


iptables使用：
查询并安装iptables的安装包：
yum list |grep iptables
yum -y install iptables iptables-services
启用iptables并设置开机启动：
systemctl start iptables
systemctl enable iptables
iptables -L

systemctl status iptables
systemctl stop iptables
systemctl start iptables
systemctl restart iptables
systemctl reload iptables
service iptables save

ip屏蔽：
iptables -I INPUT -s 124.115.0.199 -j DROP      是屏蔽124.115.0.199这个IP iptables -I INPUT -s 124.115.0.0/16 -j DROP      是屏蔽124.115.*.*这段IP 就是124.115开头的IP 

iptables -I INPUT -s 61.37.80.0/24 -j DROP      是屏蔽61.37.80.*这段IP  意思就是61.37.80开头的IP 

iptables -I INPUT -s 124.0.0.0/8 -j DROP      是屏蔽124.*.*.*这段IP  意思就是124开头的IP

取消屏蔽：
iptables -D INPUT -s 124.0.0.0/8 -j DROP
只要把I 改为 D，可以写IP或者IP段

域名屏蔽：
以下规则是屏蔽以 youtube.com 为主的所有一级 二级 三级等域名。
iptables -A OUTPUT -m string --string "youtube.com" --algo bm --to 65535 -j DROP
 # 添加屏蔽规则
iptables -D OUTPUT -m string --string "youtube.com" --algo bm --to 65535 -j DROP
 # 删除屏蔽规则，上面添加的代码是什么样，那么删除的代码就是把 -A 改成 -D

 -A
 # 添加iptables规则；
 -D
 # 删除iptables规则（把添加防火墙规则时代码中的 -A 改成 -D 即可删除添加的规则）；
 -m string
 # 指定模块；
 --string "youtube.com"
 # 指定要匹配的字符串(域名、关键词等)；
 --algo bm
 # 指定匹配字符串模式/算法（还有一种更复杂的算法：kmp）；
 --to 65535
 # 指定端口，这里代表所有端口（1-65535）；
 -j DROP
 # 指匹配到数据包后处理方式，这里是丢弃数据包。